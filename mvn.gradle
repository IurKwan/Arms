// 一个可以让你把库上传到maven仓库的插件
apply plugin: 'maven-publish'
// 对库文件进行数字签名的插件,可以通过签名知道谁创建了这个库文件,签名的时间等等信息
apply plugin: 'signing'

// 声明变量记录maven库地址
def mavenRepositoryUrl
// 判断是发布到正式库,还是snapshots库
if (isReleaseBuild()) {
    println 'RELEASE BUILD'
    // 下面的库地址指向的是我们私有仓库的Releases 仓库
    mavenRepositoryUrl = RELEASE_REPOSITORY_URL
} else {
    println 'SNAPSHOTS BUILD'
    // 下面的库地址指向的是我们私有仓库的snapshots 仓库
    mavenRepositoryUrl = SNAPSHOT_REPOSITORY_URL
}
// NEXUS_USERNAME等变量在我们主项目的gradle.properties中可以找到

// 根据我们在arms下gradle.properties中声明的版本名称,来分辨是Release版本还是 snapshots版本
def isReleaseBuild() {
    return !VERSION_NAME.contains("SNAPSHOT")
}

// 我们声明我们要执行的上传到maven的task
// afterEvaluate是什么鸟？你可以理解为在配置阶段要结束，项目评估完会走到这一步。" 引用自http://jiajixin.cn/2015/08/07/gradle-android/
afterEvaluate {
    publishing {
        publications {
            uploadArchives(MavenPublication) {
                from components.release

                groupId = POM_ARTIFACT_ID
                artifactId = POM_GROUP_ID
                version = VERSION_NAME

                // 这里是配置我们maven库需要的pom.xml文件的各个内容,具体意思我们在主目录gradle.properties中解释
                pom {
                    name = POM_NAME
                    packaging = POM_PACKAGING
                    description = POM_DESCRIPTION
                    url = POM_URL

                    scm {
                        url = POM_SCM_URL
                        connection = POM_SCM_CONNECTION
                        developerConnection = POM_SCM_DEV_CONNECTION
                    }

                    licenses {
                        license {
                            name = POM_LICENCE_NAME
                            url = POM_LICENCE_URL
                            distribution = POM_LICENCE_DIST
                        }
                    }

                    developers {
                        developer {
                            id = POM_DEVELOPER_ID
                            name = POM_DEVELOPER_NAME
                            email = POM_DEVELOPER_EMAIL
                        }
                    }
                }
            }
        }
        // 授权验证,这里也就是你登陆搭建的私服服务器时候的用户名\密码
        repositories {
            maven {
                // 允许使用HTTP
                allowInsecureProtocol = true
                url = mavenRepositoryUrl
                credentials {
                    username = NEXUS_USERNAME
                    password = NEXUS_PASSWORD
                }
            }
        }
    }

    // 进行数字签名
    signing {
        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    // type显示指定任务类型或任务, 这里指定要执行Javadoc这个task,这个task在gradle中已经定义
    task androidJavadocs(type: Javadoc) {
        // 设置源码所在的位置
        source = android.sourceSets.main.java.sourceFiles
    }

    // 生成javadoc.jar
    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
        // 指定文档名称
        archiveClassifier.set('javadoc')
        from androidJavadocs.destinationDir
    }

    // 生成sources.jar
    //将源码打包  为了保证引入的aar  包可以查看源码
    task androidSourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from android.sourceSets.main.java.sourceFiles
        from android.sourceSets.main.java.srcDirs
    }

    // 产生相关配置文件的任务
    artifacts {
        tasks.withType(Javadoc) {
            options {
                encoding "UTF-8"
                charSet 'UTF-8'
                author true
                failOnError false
                version true
                links "https://developer.android.google.cn/reference/"
            }
        }
    }

    if (JavaVersion.current().isJava8Compatible()) {
        allprojects {
            tasks.withType(Javadoc) {
                options.addStringOption('Xdoclint:none', '-quiet')
            }
        }
    }
    if (JavaVersion.current().isJava9Compatible()) {
        allprojects {
            tasks.withType(Javadoc) {
                options.addBooleanOption('html5', true)
            }
        }
    }

    artifacts {
        archives androidSourcesJar
        archives androidJavadocsJar
    }
}
